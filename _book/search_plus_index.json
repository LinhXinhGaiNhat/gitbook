{"./":{"url":"./","title":"Introduction","keywords":"","body":"Introduction "},"MSA/":{"url":"MSA/","title":"MSActivator","keywords":"","body":""},"MSA/install/install.html":{"url":"MSA/install/install.html","title":"MSA Install","keywords":"","body":"MSA Installation This section describe how to install MSA to CentOS 7. contentsï¼š Before you install MSA install Apply license Create Managed Entity Before you install Please install Docker Engine and Docker Compose before install MSA. The documentation is here. MSA install Clone the github repository on you computer: git clone https://github.com/ubiqube/quickstart.git Change director, the last version of the MSActivator is available in the master branch: cd quickstart Use the install script to install the MSActivator. This script will start by installing the Docker images and configure the Docker containers. ./scripts/install.sh Apply license You can get the license here. Open MSA Web page from Web browser.Username:ncrootPassword:ubiqube Click Log In button Click Settings Click Choose File button, and select downloaded licence file to upload. License applyed. Create Managed Entity log in MSA server. change directory to quick start execute following command. docker-compose exec msa-dev /usr/bin/create_mini_lab.sh "},"MSA/SDK/":{"url":"MSA/SDK/","title":"MSA SDK","keywords":"","body":""},"MSA/SDK/knowledge.html":{"url":"MSA/SDK/knowledge.html","title":"SDK Knowledge","keywords":"","body":"MSA SDK This section describe how to use SDK of MSA. contents: class admin class conf_backup class conf_profile class configuration_object class constants class customer class device class lookup class msa_api class orchestration class order class repository class util class variables class admin class conf_backup class conf_profile class configuration_object class constants class customer class device class lookup class msa_api class orchestration class order class repository class util class variables "},"MSA/WF/":{"url":"MSA/WF/","title":"Workflow","keywords":"","body":""},"MSA/WF/knowledge.html":{"url":"MSA/WF/knowledge.html","title":"WF Knowledge","keywords":"","body":"WF Knowledge This section describe knowledge of Workflow. contents: debugging debugging "},"MSA/WF/sample.html":{"url":"MSA/WF/sample.html","title":"WF sample","keywords":"","body":"WF Sample This section describe sample sorce code of WF. contents: get some value from input menu in a task/not WF variables pass variables from task_a to task_b create new user to linux ME get user list from linux ME and create selectable user list (get user data inventory) get user from selectable user list WF call to other WF get some value from input menu in a task/not WF variables pass variables from task_a to task_b create new user to linux ME get user list from linux ME and create selectable user list (get user data inventory) get user from selectable user list WF call to other WF "},"MSA/MS/":{"url":"MSA/MS/","title":"Micro service","keywords":"","body":""},"MSA/MS/knowledge.html":{"url":"MSA/MS/knowledge.html","title":"MS knowledge","keywords":"","body":"MS Knowledge This section describe knowledge of Micro Service of MSA. contents: entry data structure / inventory data entry IOS/Router entry data structure / inventory data entry IOS/Router "},"GNS3/":{"url":"GNS3/","title":"GNS3","keywords":"","body":""},"GNS3/knowledge.html":{"url":"GNS3/knowledge.html","title":"GNS3 knowledge","keywords":"","body":"GNS3 Knowledge This section describe knowledge of GNS3. contents: test result on windows/local server add IOS router to MSA ME MSA deployment setting with IOS router test result on windows/local server add IOS router to MSA ME MSA deployment setting with IOS router "},"GNS3/sample.html":{"url":"GNS3/sample.html","title":"GNS3 sample","keywords":"","body":"GNS3 Sample This section describe sample configuration of GNS3. contents: IOS router sample config IOS router sample config "}}